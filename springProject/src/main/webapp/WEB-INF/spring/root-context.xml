<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<!-- 
		* root-context.xml
		서버구동과 동시에 web.xml을 거쳐서 바로 로딩되는 문서
			=> 서버 구동과 동시에 바로 셋팅(bean으로 등록) 해야하는 내용을 작성하면 된다.
		주로 (외부 라이브러리)DB연결 설정, 트랙잭션 처리, 내외부 모듈연동 등등
	 -->
		
	<!-- 커넥션풀 쓸 수 있는 클래스 -->
	<bean class="org.apache.commons.dbcp.BasicDataSource" id="dataSource" destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
   		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
    	<property name="username" value="spring"/>
    	<property name="password" value="spring"/>
	</bean>
	
	<!-- 
		* 위랑 아래랑 같은 코드
		BasicDataSource dataSource = new BasicDataSource();
		dataSource.setDriverClassName("oracle.jdbc.driver.OracleDriver");
		dataSource.setUrl("jdbc:oracle:thin:@localhost:1521:xe");
		dataSource.setUsername("spring");
		dataSource.setPassword("spring");
	 -->
	 
	 
	 
	 <!-- sqlSessionFatory를 대체하는 객체 -->
	 <!-- 위에서 만든 dataSource객체를 주입해준다 -->
	 <bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactory">
	 	<property name="configLocation" value="classpath:mybatis-config.xml" />
	 	<property name="dataSource" ref="dataSource" />
	 </bean>
	 
	 <!-- 
	 	* 위랑 아래랑 같은 코드
	 	SqlSessionFactoryBean sqlSessionFactory = new SqlSessionFactoryBean();
	 	sqlSessionFactory.setConfigLocation("classpath:mybatis-config.xml")
	 	sqlSessionFactory.setDataSource("dataSource")
	  -->
	  
	  
	  <!-- 위에서 만든 sqlSessionFactory를 생성자에 주입해준다 -->
	  <bean class="org.mybatis.spring.SqlSessionTemplate" id="sqlSession">
	  	<constructor-arg ref="sqlSessionFactory" />
	  </bean>
	  
	  <!-- 
		* 위랑 아래랑 같은 코드
		SqlSessionTemplate sqlSession = new SqlSessionTemplate(sqlSessionFactory);
			==> sqlSessionFactory를 생성자에 주입해줘
	   -->
	 
	 <!-- 
	 	property : setter주입
	 	constructor-arg : 생성자주입
	  -->
	  
	  
	  <bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver" id="multipartResolver">
	      <property name="maxUploadSize" value="100000000" />
	      <property name="maxInMemorySize" value="100000000" />
	   </bean>
	  
	 
</beans>
